import 'package:flutter/material.dart';
import 'package:flutter_map/flutter_map.dart';
import 'package:flutter_svg/flutter_svg.dart';
import 'package:graphql_flutter/graphql_flutter.dart';
import 'package:latlong2/latlong.dart' as latLng;
import 'package:page_transition/page_transition.dart';
import 'package:project_samaritan/services/get_catagory.dart';

import '../medicine_Description.dart';
// import 'package:latlong2/latlong.dart';

class MapPage extends StatelessWidget {
  final Map<String, dynamic> locationResult;
  final String medName;
  const MapPage({Key? key, required this.locationResult, required this.medName})
      : super(key: key);

  @override
  Widget build(BuildContext context) {
    var latitude = double.parse((locationResult["users_locations"][0]
        as Map<String, dynamic>)['latitude']);
    var longitude = double.parse((locationResult["users_locations"][0]
        as Map<String, dynamic>)['longitude']);

    return Query(
      options: QueryOptions(document: gql(CategoryService.price_query),
        variables: {
          "id":locationResult["id"],
          "medName":medName
        },
      ),
      builder: (QueryResult result, {VoidCallback? refetch, FetchMore? fetchMore}) {
        if (result.hasException) {
          return Text(
              'Error occurred: ${result.exception.toString()}');
        }
        if (result.isLoading) {
          return Container(
              alignment: Alignment.center,
              child: CircularProgressIndicator());
        }
        final data = result.data;
        if (data == null || data['medicine'] == null) {
          return Text('No data available');
        }
        return Stack(
          children: [
            Scaffold(
                backgroundColor: Theme.of(context).colorScheme.background,
                appBar: AppBar(
                  backgroundColor: Theme.of(context).colorScheme.background,
                  title: Text('Nearby pharmacy '),
                  titleTextStyle: TextStyle(
                    color: Theme.of(context).colorScheme.tertiary,
                    fontSize: 20,
                  ),
                  iconTheme: IconThemeData(
                    color: Theme.of(context).colorScheme.secondary,
                  ),
                ),
                body: FlutterMap(
                  options: MapOptions(
                    center: latLng.LatLng(latitude, longitude),
                    zoom: 18,
                  ),
                  children: [
                    TileLayer(
                      urlTemplate:
                      'https://api.mapbox.com/styles/v1/oli-mac/clinhtu1u002701qy77wc4g7q/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1Ijoib2xpLW1hYyIsImEiOiJjbDMzNHllZW8wNG52M2Nxc2pkajVtaHphIn0.DM-n34-7ehU8aKuCX-JSdw',
                      // userAgentPackageName: 'com.example.app',
                      additionalOptions: {
                        "accessToken":
                        "pk.eyJ1Ijoib2xpLW1hYyIsImEiOiJjbDMzNHllZW8wNG52M2Nxc2pkajVtaHphIn0.DM-n34-7ehU8aKuCX-JSdw",
                        "id": "mapbox.satellite"
                      },
                    ),
                    MarkerLayer(
                      markers: [
                        Marker(
                            width: 80,
                            height: 80,
                            point: latLng.LatLng(latitude, longitude),
                            builder: (context) => Container(
                              child: SvgPicture.asset(
                                  'assets/icons/location.svg',
                                  height: 80,
                                  width: 80,
                                  color: Colors.red),
                            ))
                      ],
                    ),
                  ],
                )),
            Positioned(
              left: 0,
              right: 0,
              bottom: 0,
              child: SizedBox(
                height: 200,
                child: Card(
                  color: Colors.white,
                  shape: RoundedRectangleBorder(
                    borderRadius: BorderRadius.all(
                        Radius.circular(16)
                      // topLeft: Radius.circular(16.0),
                      // topRight: Radius.circular(16.0),
                    ),
                  ),
                  elevation: 4,
                  child: Padding(
                    padding: const EdgeInsets.only(top:8.0, bottom: 0,left: 12 ,right: 12),
                    child: Column(
                      crossAxisAlignment: CrossAxisAlignment.start,
                      children: [
                        ListTile(
                          leading: Icon(Icons.location_on
                            ,size: 40,),
                          title: Padding(
                            padding: const EdgeInsets.only(top:8.0, bottom: 8),
                            child: Text(locationResult["pharmacy_name"],
                              style: TextStyle(
                                color: Theme.of(context).colorScheme.secondary,
                                fontSize: 22,
                              ),),
                          ),
                          subtitle: Text(medName, style: TextStyle(
                              color: Theme.of(context).colorScheme.tertiary,
                              fontSize: 22,
                              fontWeight: FontWeight.bold
                          ),),
                          trailing: Padding(
                            padding: const EdgeInsets.only(top:14.0, bottom: 8),
                            child: Text(
                              "${result.data!["medicine"][0]["price"].toString()}  ETB",
                              style: TextStyle(
                                color: Theme.of(context).colorScheme.secondary,
                                fontSize: 22,
                              ),
                            ),
                          ),
                          onTap: () {
                            // Handle onTap event
                          },
                        ),
                        // Additional content here
                        Expanded(
                          child: Row(
                            mainAxisAlignment : MainAxisAlignment.spaceAround,
                            children: [
                              Expanded(
                                child: ClipRRect(
                                  borderRadius:
                                  BorderRadius.circular(10),
                                  child: ElevatedButton(
                                    style: ElevatedButton.styleFrom(
                                        minimumSize:
                                        const Size.fromHeight(
                                            45),
                                        backgroundColor: Theme.of(context).colorScheme.secondary// NEW
                                    ),
                                    onPressed: () async {

                                    },
                                    child: Row(
                                        mainAxisAlignment:
                                        MainAxisAlignment.center,
                                        children:  <Widget>[
                                          Text(
                                            'Directions',
                                            style: TextStyle(
                                                fontSize: 20,
                                                color: Colors.white
                                            ),
                                          )
                                        ]),
                                  ),
                                ),
                              ),
                              SizedBox(
                                width: 20,
                              ),
                              Expanded(
                                child: ClipRRect(
                                  borderRadius:
                                  BorderRadius.circular(10),
                                  child: ElevatedButton(
                                    style: ElevatedButton.styleFrom(
                                        minimumSize: const Size.fromHeight(45),
                                        backgroundColor: Theme.of(context).colorScheme.secondary// NEW
                                    ),
                                    onPressed: () async {
                                      Navigator.of(context).push(PageTransition(
                                          child: MedicineDescription(
                                            medName: medName,
                                          ), type: PageTransitionType.bottomToTop));
                                    },
                                    child: Row(
                                        mainAxisAlignment:
                                        MainAxisAlignment.center,
                                        children:  <Widget>[
                                          Text(
                                            'Description',
                                            style: TextStyle(
                                                fontSize: 20,
                                                color: Colors.white
                                            ),
                                          )
                                        ]),
                                  ),
                                ),
                              )
                            ],
                          ),
                        ),
                      ],
                    ),
                  ),
                ),
              ),
            ),
          ],
        );
      },
    );




  }
}
